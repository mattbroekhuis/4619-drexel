version: '3'
services:
  app:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./nginx-proxy-manager/data:/data
      - ./nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    extra_hosts:
        - "host.docker.internal:host-gateway"
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    network_mode: "host"
    volumes:
      - /srv/4619-drexel/home-assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:2
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - /srv/4619-drexel/mosquitto/config:/mosquitto/config
      - /srv/4619-drexel/mosquitto/data:/mosquitto/data
      - /srv/4619-drexel/mosquitto/log:/mosquitto/log
    environment:
      TZ: "America/Chicago"
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-u", "test", "-P", "test_user_password", "-h", "localhost", "-t", "$$SYS/broker/uptime", "-i", "docker_health_check", "-C", "1"]
      interval: 1m
      timeout: 10s
      retries: 3
  node-red:
    image: nodered/node-red:latest
    user: 'root:root'
    network_mode: "host"
    container_name: node-red
    environment:
      - TZ=America/Chicago
    volumes:
     - /srv/4619-drexel/node-red/data:/data
    restart: always
    
  zwavejs2mqtt:
    container_name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt:latest
    network_mode: "host"
    restart: always
    tty: true
    stop_signal: SIGINT
    environment:
      - SESSION_SECRET=9A34447AFC8355BC28B2B6607DC17F87
      - ZWAVEJS_EXTERNAL_CONFIG=/srv/4619-drexel/home-assistant/config/zwavejs/.config-db
      # Uncomment if you want log times and dates to match your timezone instead of UTC
      # Available at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      - TZ=America/Chicago
    #devices:
      # Do not use /dev/ttyUSBX serial devices, as those mappings can change over time.
      # Instead, use the /dev/serial/by-id/X serial device for your Z-Wave stick.
      # - /dev/ttyUSB0
    volumes:
      - /srv/4619-drexel/zwavejs/:/usr/src/app/store
  scrypted:
    environment:
      # Scrypted NVR Storage (Part 2 of 3)

      # Uncomment the next line to configure the NVR plugin to store recordings
      # use the /nvr directory within the container. This can also be configured
      # within the plugin manually.
      # The drive or network share will ALSO need to be configured in the volumes
      # section below.
      # - SCRYPTED_NVR_VOLUME=/nvr

      - SCRYPTED_WEBHOOK_UPDATE_AUTHORIZATION=Bearer SET_THIS_TO_SOME_RANDOM_TEXT
      - SCRYPTED_WEBHOOK_UPDATE=http://localhost:10444/v1/update

      # Uncomment next line to run avahi-daemon inside the container
      # Don't use if dbus and avahi run on the host and are bind-mounted
      # (see below under "volumes")
      # - SCRYPTED_DOCKER_AVAHI=true

      # Uncomment next 3 lines for Nvidia GPU support.
      # - NVIDIA_VISIBLE_DEVICES=all
      # - NVIDIA_DRIVER_CAPABILITIES=all
    # runtime: nvidia

    volumes:
      # Scrypted NVR Storage (Part 3 of 3)

      # Modify to add the additional volume for Scrypted NVR.
      # The following example would mount the /mnt/sda/video path on the host
      # to the /nvr path inside the docker container.
      # - /mnt/media/video:/nvr

      # Or use a network mount from one of the CIFS/NFS examples at the top of this file.
      # - type: volume
      #   source: nvr
      #   target: /nvr
      #   volume:
      #     nocopy: true

      # uncomment the following lines to expose Avahi, an mDNS advertiser.
      # make sure Avahi is running on the host machine, otherwise this will not work.
      # not compatible with Avahi enabled via SCRYPTED_DOCKER_AVAHI=true
      # - /var/run/dbus:/var/run/dbus
      # - /var/run/avahi-daemon/socket:/var/run/avahi-daemon/socket

      # Default volume for the Scrypted database. Typically should not be changed.
      - /srv/4619-drexel/.scrypted/volume:/server/volume
    devices: [
      # uncomment the common systems devices to pass
      # them through to docker.

      # all usb devices, such as coral tpu
      # "/dev/bus/usb:/dev/bus/usb",

      # hardware accelerated video decoding, opencl, etc.
      # "/dev/dri:/dev/dri",

      # uncomment below as necessary.
      # zwave usb serial device

      # "/dev/ttyACM0:/dev/ttyACM0",

      # coral PCI devices
      # "/dev/apex_0:/dev/apex_0",
      # "/dev/apex_1:/dev/apex_1",
    ]

    container_name: scrypted
    restart: unless-stopped
    network_mode: host
    image: koush/scrypted

    # logging is noisy and will unnecessarily wear on flash storage.
    # scrypted has per device in memory logging that is preferred.
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    labels:
      - "com.centurylinklabs.watchtower.scope=scrypted"

    # watchtower manages updates for Scrypted.
  watchtower:
    environment:
      - WATCHTOWER_HTTP_API_TOKEN=SET_THIS_TO_SOME_RANDOM_TEXT
      - WATCHTOWER_HTTP_API_UPDATE=true
      - WATCHTOWER_SCOPE=scrypted
      # remove the following line to never allow docker to auto update.
      # this is not recommended.
      - WATCHTOWER_HTTP_API_PERIODIC_POLLS=true
    image: containrrr/watchtower
    container_name: scrypted-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "com.centurylinklabs.watchtower.scope=scrypted"
    ports:
      # The auto update port 10444 can be configured
      # Must match the port in the auto update url above.
      - 10444:8080
    # check for updates once an hour (interval is in seconds)
    command: --interval 3600 --cleanup --scope scrypted